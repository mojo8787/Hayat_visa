{"ast":null,"code":"import { ref } from 'vue';\nimport { useVuelidate } from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nimport Navbar from '../components/layout/Navbar.vue';\nimport ProgressBar from '@/components/ProgressBar.vue';\nimport PersonalInfoForm from '../components/forms/PersonalInfoForm.vue';\nimport DocumentsForm from '../components/forms/DocumentsForm.vue';\nimport PaymentForm from '@/components/PaymentForm.vue';\nimport NextBackButtons from '../components/buttons/NextBackButtons.vue';\nimport Footer from '../components/layout/Footer.vue';\nexport default {\n  name: 'ApplicationFormPage',\n  components: {\n    Navbar,\n    ProgressBar,\n    PersonalInfoForm,\n    DocumentsForm,\n    PaymentForm,\n    NextBackButtons,\n    Footer\n  },\n  setup() {\n    const formData = ref({\n      personalInfo: {},\n      documents: null,\n      payment: null\n    });\n    const rules = {\n      formData: {\n        personalInfo: {\n          fullName: {\n            required\n          },\n          dateOfBirth: {\n            required\n          },\n          nationality: {\n            required\n          },\n          passportNumber: {\n            required,\n            minLength: minLength(6)\n          },\n          email: {\n            required,\n            email\n          }\n        },\n        documents: {\n          documents: {\n            required,\n            minLength: minLength(1)\n          }\n        },\n        payment: {\n          payment: {\n            required\n          }\n        }\n      }\n    };\n    const v$ = useVuelidate(rules, {\n      formData\n    });\n    return {\n      formData,\n      v$\n    };\n  },\n  data() {\n    return {\n      currentStep: 1,\n      stepLabels: ['Personal Info', 'Documents', 'Payment']\n    };\n  },\n  methods: {\n    async nextStep() {\n      const isFormValid = await this.v$.$validate();\n      if (!isFormValid) {\n        alert(\"Please correct the errors before proceeding.\");\n      } else {\n        this.currentStep++;\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      }\n    },\n    async submitForm() {\n      const isFormValid = await this.v$.$validate();\n      if (isFormValid) {\n        console.log('Form Data:', this.formData);\n        alert('Form submitted successfully!');\n      } else {\n        alert(\"Please correct the errors before submitting.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["ref","useVuelidate","required","email","minLength","Navbar","ProgressBar","PersonalInfoForm","DocumentsForm","PaymentForm","NextBackButtons","Footer","name","components","setup","formData","personalInfo","documents","payment","rules","fullName","dateOfBirth","nationality","passportNumber","v$","data","currentStep","stepLabels","methods","nextStep","isFormValid","$validate","alert","prevStep","submitForm","console","log"],"sources":["/Users/Saham/Documents/Warani/src/pages/ApplicationFormPage.vue"],"sourcesContent":["<template>\n  <div class=\"application-form-page\">\n    <Navbar />\n\n    <!-- Main Container for the form -->\n    <div class=\"main-container\">\n      <!-- Progress Bar for showing current step with labels and transition effect -->\n      <ProgressBar :currentStep=\"currentStep\" :stepLabels=\"stepLabels\" />\n\n      <!-- Dynamic Form Step Rendering -->\n      <transition name=\"fade\" mode=\"out-in\">\n        <div :key=\"currentStep\" class=\"form-step\">\n          <div v-if=\"currentStep === 1\">\n            <PersonalInfoForm v-model=\"formData.personalInfo\" :validation=\"v$.formData.personalInfo\" />\n          </div>\n\n          <div v-if=\"currentStep === 2\">\n            <DocumentsForm v-model=\"formData.documents\" :validation=\"v$.formData.documents\" />\n          </div>\n\n          <div v-if=\"currentStep === 3\">\n            <PaymentForm v-model=\"formData.payment\" :validation=\"v$.formData.payment\" />\n          </div>\n        </div>\n      </transition>\n\n      <!-- Navigation Buttons -->\n      <NextBackButtons :currentStep=\"currentStep\" @next=\"nextStep\" @back=\"prevStep\" @submit=\"submitForm\" />\n    </div>\n\n    <Footer />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, email, minLength } from '@vuelidate/validators'\nimport Navbar from '../components/layout/Navbar.vue'\nimport ProgressBar from '@/components/ProgressBar.vue'\nimport PersonalInfoForm from '../components/forms/PersonalInfoForm.vue'\nimport DocumentsForm from '../components/forms/DocumentsForm.vue'\nimport PaymentForm from '@/components/PaymentForm.vue'\nimport NextBackButtons from '../components/buttons/NextBackButtons.vue'\nimport Footer from '../components/layout/Footer.vue'\n\nexport default {\n  name: 'ApplicationFormPage',\n  components: {\n    Navbar,\n    ProgressBar,\n    PersonalInfoForm,\n    DocumentsForm,\n    PaymentForm,\n    NextBackButtons,\n    Footer\n  },\n  setup() {\n    const formData = ref({\n      personalInfo: {},\n      documents: null,\n      payment: null\n    })\n\n    const rules = {\n      formData: {\n        personalInfo: {\n          fullName: { required },\n          dateOfBirth: { required },\n          nationality: { required },\n          passportNumber: { required, minLength: minLength(6) },\n          email: { required, email }\n        },\n        documents: {\n          documents: { required, minLength: minLength(1) }\n        },\n        payment: {\n          payment: { required }\n        }\n      }\n    }\n\n    const v$ = useVuelidate(rules, { formData })\n\n    return { formData, v$ }\n  },\n  data() {\n    return {\n      currentStep: 1,\n      stepLabels: ['Personal Info', 'Documents', 'Payment']\n    }\n  },\n  methods: {\n    async nextStep() {\n      const isFormValid = await this.v$.$validate()\n      if (!isFormValid) {\n        alert(\"Please correct the errors before proceeding.\");\n      } else {\n        this.currentStep++;\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      }\n    },\n    async submitForm() {\n      const isFormValid = await this.v$.$validate()\n      if (isFormValid) {\n        console.log('Form Data:', this.formData);\n        alert('Form submitted successfully!');\n      } else {\n        alert(\"Please correct the errors before submitting.\");\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.application-form-page {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #f0f4f8;\n  /* Soft light background */\n  padding: 2rem 1rem;\n}\n\n.main-container {\n  background-color: #ffffff;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  /* Subtle box-shadow */\n  max-width: 720px;\n  width: 100%;\n  margin: 1rem;\n}\n\n.form-step {\n  margin-bottom: 2rem;\n}\n\n/* Progress Bar Styles */\n.progress-bar {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n}\n\n.progress-step {\n  position: relative;\n  flex: 1;\n  text-align: center;\n  padding: 0.5rem 1rem;\n}\n\n.progress-step:not(:last-child)::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 100%;\n  width: calc(100% - 2rem);\n  /* Subtle connector between steps */\n  height: 3px;\n  background-color: #e2e8f0;\n  z-index: -1;\n  transform: translateY(-50%);\n}\n\n.progress-step.completed::after {\n  background-color: #38bdf8;\n  /* Light blue for completed steps */\n}\n\n.progress-step .step-label {\n  font-weight: 600;\n  color: #4b5563;\n  /* Neutral text color */\n}\n\n.progress-step.completed .step-label {\n  color: #38bdf8;\n  /* Light blue for completed steps */\n}\n\n.progress-step.active .step-label {\n  color: #2563eb;\n  /* Stronger blue for active step */\n}\n\n/* Button Styles */\n.next-back-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1rem;\n}\n\nbutton {\n  padding: 0.75rem 1.25rem;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 500;\n  color: white;\n  background-color: #2563eb;\n  /* Blue button color */\n  transition: background-color 0.3s ease, transform 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #1d4ed8;\n  /* Darker blue on hover */\n}\n\nbutton:disabled {\n  background-color: #9ca3af;\n  /* Gray for disabled state */\n  cursor: not-allowed;\n}\n\nbutton.primary {\n  background-color: #10b981;\n  /* Green for primary action */\n}\n\nbutton.primary:hover {\n  background-color: #059669;\n  /* Darker green on hover */\n}\n\n/* Fade Transition */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.4s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"mappings":"AAmCA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAsB;AACjE,OAAOC,MAAK,MAAO,iCAAgC;AACnD,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,gBAAe,MAAO,0CAAyC;AACtE,OAAOC,aAAY,MAAO,uCAAsC;AAChE,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,eAAc,MAAO,2CAA0C;AACtE,OAAOC,MAAK,MAAO,iCAAgC;AAEnD,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE;IACVR,MAAM;IACNC,WAAW;IACXC,gBAAgB;IAChBC,aAAa;IACbC,WAAW;IACXC,eAAe;IACfC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIf,GAAG,CAAC;MACnBgB,YAAY,EAAE,CAAC,CAAC;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,KAAI,GAAI;MACZJ,QAAQ,EAAE;QACRC,YAAY,EAAE;UACZI,QAAQ,EAAE;YAAElB;UAAS,CAAC;UACtBmB,WAAW,EAAE;YAAEnB;UAAS,CAAC;UACzBoB,WAAW,EAAE;YAAEpB;UAAS,CAAC;UACzBqB,cAAc,EAAE;YAAErB,QAAQ;YAAEE,SAAS,EAAEA,SAAS,CAAC,CAAC;UAAE,CAAC;UACrDD,KAAK,EAAE;YAAED,QAAQ;YAAEC;UAAM;QAC3B,CAAC;QACDc,SAAS,EAAE;UACTA,SAAS,EAAE;YAAEf,QAAQ;YAAEE,SAAS,EAAEA,SAAS,CAAC,CAAC;UAAE;QACjD,CAAC;QACDc,OAAO,EAAE;UACPA,OAAO,EAAE;YAAEhB;UAAS;QACtB;MACF;IACF;IAEA,MAAMsB,EAAC,GAAIvB,YAAY,CAACkB,KAAK,EAAE;MAAEJ;IAAS,CAAC;IAE3C,OAAO;MAAEA,QAAQ;MAAES;IAAG;EACxB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC,eAAe,EAAE,WAAW,EAAE,SAAS;IACtD;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,MAAMC,WAAU,GAAI,MAAM,IAAI,CAACN,EAAE,CAACO,SAAS,CAAC;MAC5C,IAAI,CAACD,WAAW,EAAE;QAChBE,KAAK,CAAC,8CAA8C,CAAC;MACvD,OAAO;QACL,IAAI,CAACN,WAAW,EAAE;MACpB;IACF,CAAC;IACDO,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACP,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACD,MAAMQ,UAAUA,CAAA,EAAG;MACjB,MAAMJ,WAAU,GAAI,MAAM,IAAI,CAACN,EAAE,CAACO,SAAS,CAAC;MAC5C,IAAID,WAAW,EAAE;QACfK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACrB,QAAQ,CAAC;QACxCiB,KAAK,CAAC,8BAA8B,CAAC;MACvC,OAAO;QACLA,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}