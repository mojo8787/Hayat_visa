{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-result p-6 bg-white rounded-lg shadow-md\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-bold mb-2\"\n  }, \"Application Status\", -1 /* HOISTED */)), _createElementVNode(\"p\", {\n    class: _normalizeClass($options.statusClass)\n  }, _toDisplayString($props.status), 3 /* TEXT, CLASS */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$options","statusClass","$props","status"],"sources":["/Users/Saham/Documents/Warani/src/components/tables/SearchResult.vue"],"sourcesContent":["<template>\n    <div class=\"search-result p-6 bg-white rounded-lg shadow-md\">\n      <h3 class=\"text-lg font-bold mb-2\">Application Status</h3>\n      <p :class=\"statusClass\">{{ status }}</p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'SearchResult',\n    props: {\n      status: {\n        type: String,\n        default: 'Pending'\n      }\n    },\n    computed: {\n      statusClass() {\n        // Conditionally assign classes based on status\n        if (this.status === 'Approved') {\n          return 'text-green-600 font-semibold';\n        } else if (this.status === 'Rejected') {\n          return 'text-red-600 font-semibold';\n        } else {\n          return 'text-yellow-600 font-semibold';\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  /* Optionally add more specific styling here */\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiD;;uBAA5DC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJC,mBAAA,CAA0D;IAAtDH,KAAK,EAAC;EAAwB,GAAC,oBAAkB,sBACrDG,mBAAA,CAAwC;IAApCH,KAAK,EAHfI,eAAA,CAGiBC,QAAA,CAAAC,WAAW;sBAAKC,MAAA,CAAAC,MAAM,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}