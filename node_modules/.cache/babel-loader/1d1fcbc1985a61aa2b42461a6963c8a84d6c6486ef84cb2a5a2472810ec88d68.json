{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"progress-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"progress-bar-inner\",\n    style: _normalizeStyle({\n      width: $options.progressPercentage + '%'\n    })\n  }, null, 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","width","$options","progressPercentage"],"sources":["/Users/Saham/Documents/Warani/src/components/ProgressBar.vue"],"sourcesContent":["<template>\n    <div class=\"progress-bar\">\n      <div\n        class=\"progress-bar-inner\"\n        :style=\"{ width: progressPercentage + '%' }\"\n      ></div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: ['currentStep'],\n    computed: {\n      progressPercentage() {\n        return (this.currentStep / 3) * 100; // Adjust depending on the number of steps\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .progress-bar {\n    background-color: #e0e0e0;\n    height: 10px;\n    width: 100%;\n    border-radius: 5px;\n  }\n  .progress-bar-inner {\n    height: 100%;\n    background-color: #4caf50;\n    border-radius: 5px;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAc;;uBAAzBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAGO;IAFLH,KAAK,EAAC,oBAAoB;IACzBI,KAAK,EAJdC,eAAA;MAAAC,KAAA,EAIyBC,QAAA,CAAAC,kBAAkB;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}