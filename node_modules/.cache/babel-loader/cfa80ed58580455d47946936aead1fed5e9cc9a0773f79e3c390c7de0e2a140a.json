{"ast":null,"code":"import Navbar from '../components/layout/Navbar.vue';\nimport ProgressBar from '@/components/ProgressBar.vue';\nimport PersonalInfoForm from '../components/forms/PersonalInfoForm.vue';\nimport DocumentsForm from '../components/forms/DocumentsForm.vue';\nimport PaymentForm from '@/components/PaymentForm.vue';\nimport NextBackButtons from '../components/buttons/NextBackButtons.vue';\nimport Footer from '../components/layout/Footer.vue';\nimport { required, email, minLength } from 'vuelidate/lib/validators';\nexport default {\n  name: 'ApplicationFormPage',\n  components: {\n    Navbar,\n    ProgressBar,\n    PersonalInfoForm,\n    DocumentsForm,\n    PaymentForm,\n    NextBackButtons,\n    Footer\n  },\n  data() {\n    return {\n      currentStep: 1,\n      formData: {\n        personalInfo: {\n          fullName: '',\n          dateOfBirth: '',\n          nationality: '',\n          passportNumber: '',\n          email: ''\n        },\n        documents: null,\n        payment: null\n      },\n      stepLabels: ['Step 1: Personal Info', 'Step 2: Documents', 'Step 3: Payment'],\n      tooltips: {\n        personalInfo: {\n          passportNumber: 'Enter your passport number in the format XXXXXXXXX',\n          email: 'Enter a valid email address'\n        },\n        documents: {\n          // Example tooltip for documents\n        },\n        payment: {\n          // Example tooltip for payment\n        }\n      }\n    };\n  },\n  validations: {\n    formData: {\n      personalInfo: {\n        fullName: {\n          required\n        },\n        dateOfBirth: {\n          required\n        },\n        nationality: {\n          required\n        },\n        passportNumber: {\n          required,\n          minLength: minLength(6)\n        },\n        email: {\n          required,\n          email\n        }\n      },\n      documents: {\n        // Assuming documents is an array of document objects\n        documents: {\n          required,\n          minLength: minLength(1)\n        }\n      },\n      payment: {\n        // Assuming payment includes fields like cardNumber\n        payment: {\n          required\n        }\n      }\n    }\n  },\n  methods: {\n    nextStep() {\n      if (this.$v.formData.$invalid) {\n        this.$v.formData.$touch();\n        alert(\"Please correct the errors before proceeding.\");\n      } else {\n        this.currentStep++;\n      }\n    },\n    prevStep() {\n      if (this.currentStep > 1) {\n        this.currentStep--;\n      }\n    },\n    submitForm() {\n      this.$v.formData.$touch();\n      if (!this.$v.formData.$invalid) {\n        console.log('Form Data:', this.formData);\n        alert('Form submitted successfully!');\n      } else {\n        alert(\"Please correct the errors before submitting.\");\n      }\n    },\n    saveFormData() {\n      // Implement logic to save form data to a server or local storage\n      console.log('Form data saved for later completion:', this.formData);\n      alert('Your form data has been saved. You can continue later.');\n    }\n  }\n};","map":{"version":3,"names":["Navbar","ProgressBar","PersonalInfoForm","DocumentsForm","PaymentForm","NextBackButtons","Footer","required","email","minLength","name","components","data","currentStep","formData","personalInfo","fullName","dateOfBirth","nationality","passportNumber","documents","payment","stepLabels","tooltips","validations","methods","nextStep","$v","$invalid","$touch","alert","prevStep","submitForm","console","log","saveFormData"],"sources":["/Users/Saham/Documents/Warani/src/pages/ApplicationFormPage.vue"],"sourcesContent":["<template>\n    <div class=\"application-form-page sm:p-4 md:p-6\">\n      <Navbar />\n      \n      <!-- Progress Bar for showing current step with labels and transition effect -->\n      <ProgressBar :currentStep=\"currentStep\" :stepLabels=\"stepLabels\" />\n\n      <!-- Dynamic Form Step Rendering -->\n      <transition name=\"fade\" mode=\"out-in\">\n        <div :key=\"currentStep\" class=\"p-2 sm:p-4\">\n          <div v-if=\"currentStep === 1\">\n            <PersonalInfoForm \n              v-model=\"formData.personalInfo\"\n              :validation=\"validation.personalInfo\"\n              :tooltips=\"tooltips.personalInfo\"\n              class=\"space-y-4\"\n            />\n          </div>\n          \n          <div v-if=\"currentStep === 2\">\n            <DocumentsForm \n              v-model=\"formData.documents\"\n              :validation=\"validation.documents\"\n              :tooltips=\"tooltips.documents\"\n              class=\"space-y-4\"\n            />\n          </div>\n          \n          <div v-if=\"currentStep === 3\">\n            <PaymentForm \n              v-model=\"formData.payment\"\n              :validation=\"validation.payment\"\n              :tooltips=\"tooltips.payment\"\n              class=\"space-y-4\"\n            />\n          </div>\n        </div>\n      </transition>\n      \n      <!-- Navigation Buttons -->\n      <NextBackButtons\n        :currentStep=\"currentStep\"\n        @next=\"nextStep\"\n        @back=\"prevStep\"\n        @submit=\"submitForm\"\n        @save=\"saveFormData\"\n        class=\"mt-4\"\n      />\n      \n      <Footer />\n    </div>\n  </template>\n  \n  <script>\n  import Navbar from '../components/layout/Navbar.vue'\n  import ProgressBar from '@/components/ProgressBar.vue'\n  import PersonalInfoForm from '../components/forms/PersonalInfoForm.vue'\n  import DocumentsForm from '../components/forms/DocumentsForm.vue'\n  import PaymentForm from '@/components/PaymentForm.vue'\n  import NextBackButtons from '../components/buttons/NextBackButtons.vue'\n  import Footer from '../components/layout/Footer.vue'\n  import { required, email, minLength } from 'vuelidate/lib/validators'\n  \n  export default {\n    name: 'ApplicationFormPage',\n    components: {\n      Navbar,\n      ProgressBar,\n      PersonalInfoForm,\n      DocumentsForm,\n      PaymentForm,\n      NextBackButtons,\n      Footer\n    },\n    data() {\n      return {\n        currentStep: 1,\n        formData: {\n          personalInfo: {\n            fullName: '',\n            dateOfBirth: '',\n            nationality: '',\n            passportNumber: '',\n            email: '',\n          },\n          documents: null,\n          payment: null\n        },\n        stepLabels: ['Step 1: Personal Info', 'Step 2: Documents', 'Step 3: Payment'],\n        tooltips: {\n          personalInfo: {\n            passportNumber: 'Enter your passport number in the format XXXXXXXXX',\n            email: 'Enter a valid email address'\n          },\n          documents: {\n            // Example tooltip for documents\n          },\n          payment: {\n            // Example tooltip for payment\n          }\n        }\n      };\n    },\n    validations: {\n      formData: {\n        personalInfo: {\n          fullName: { required },\n          dateOfBirth: { required },\n          nationality: { required },\n          passportNumber: { required, minLength: minLength(6) },\n          email: { required, email }\n        },\n        documents: {\n          // Assuming documents is an array of document objects\n          documents: { required, minLength: minLength(1) }\n        },\n        payment: {\n          // Assuming payment includes fields like cardNumber\n          payment: { required }\n        }\n      }\n    },\n    methods: {\n      nextStep() {\n        if (this.$v.formData.$invalid) {\n          this.$v.formData.$touch();\n          alert(\"Please correct the errors before proceeding.\");\n        } else {\n          this.currentStep++;\n        }\n      },\n      prevStep() {\n        if (this.currentStep > 1) {\n          this.currentStep--;\n        }\n      },\n      submitForm() {\n        this.$v.formData.$touch();\n        if (!this.$v.formData.$invalid) {\n          console.log('Form Data:', this.formData);\n          alert('Form submitted successfully!');\n        } else {\n          alert(\"Please correct the errors before submitting.\");\n        }\n      },\n      saveFormData() {\n        // Implement logic to save form data to a server or local storage\n        console.log('Form data saved for later completion:', this.formData);\n        alert('Your form data has been saved. You can continue later.');\n      }\n    }\n  }\n  </script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}